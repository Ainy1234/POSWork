#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace POSWork
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="POS")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccessMenu(AccessMenu instance);
    partial void UpdateAccessMenu(AccessMenu instance);
    partial void DeleteAccessMenu(AccessMenu instance);
    partial void InsertTbCustomer(TbCustomer instance);
    partial void UpdateTbCustomer(TbCustomer instance);
    partial void DeleteTbCustomer(TbCustomer instance);
    partial void InsertTbItem(TbItem instance);
    partial void UpdateTbItem(TbItem instance);
    partial void DeleteTbItem(TbItem instance);
    partial void InsertTbPurchaseInvoice(TbPurchaseInvoice instance);
    partial void UpdateTbPurchaseInvoice(TbPurchaseInvoice instance);
    partial void DeleteTbPurchaseInvoice(TbPurchaseInvoice instance);
    partial void InsertTbPurchaseOrder(TbPurchaseOrder instance);
    partial void UpdateTbPurchaseOrder(TbPurchaseOrder instance);
    partial void DeleteTbPurchaseOrder(TbPurchaseOrder instance);
    partial void InsertTbPurchaseReturn(TbPurchaseReturn instance);
    partial void UpdateTbPurchaseReturn(TbPurchaseReturn instance);
    partial void DeleteTbPurchaseReturn(TbPurchaseReturn instance);
    partial void InsertTbRole(TbRole instance);
    partial void UpdateTbRole(TbRole instance);
    partial void DeleteTbRole(TbRole instance);
    partial void InsertTbSaleInvoice(TbSaleInvoice instance);
    partial void UpdateTbSaleInvoice(TbSaleInvoice instance);
    partial void DeleteTbSaleInvoice(TbSaleInvoice instance);
    partial void InsertTbSaleOrder(TbSaleOrder instance);
    partial void UpdateTbSaleOrder(TbSaleOrder instance);
    partial void DeleteTbSaleOrder(TbSaleOrder instance);
    partial void InsertTbSalesReturn(TbSalesReturn instance);
    partial void UpdateTbSalesReturn(TbSalesReturn instance);
    partial void DeleteTbSalesReturn(TbSalesReturn instance);
    partial void InsertTbSupplier(TbSupplier instance);
    partial void UpdateTbSupplier(TbSupplier instance);
    partial void DeleteTbSupplier(TbSupplier instance);
    partial void InsertTbUser(TbUser instance);
    partial void UpdateTbUser(TbUser instance);
    partial void DeleteTbUser(TbUser instance);
    partial void InsertTbUserAccess(TbUserAccess instance);
    partial void UpdateTbUserAccess(TbUserAccess instance);
    partial void DeleteTbUserAccess(TbUserAccess instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["POSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccessMenu> AccessMenus
		{
			get
			{
				return this.GetTable<AccessMenu>();
			}
		}
		
		public System.Data.Linq.Table<TbCustomer> TbCustomers
		{
			get
			{
				return this.GetTable<TbCustomer>();
			}
		}
		
		public System.Data.Linq.Table<TbItem> TbItems
		{
			get
			{
				return this.GetTable<TbItem>();
			}
		}
		
		public System.Data.Linq.Table<TbPurchaseInvoice> TbPurchaseInvoices
		{
			get
			{
				return this.GetTable<TbPurchaseInvoice>();
			}
		}
		
		public System.Data.Linq.Table<TbPurchaseOrder> TbPurchaseOrders
		{
			get
			{
				return this.GetTable<TbPurchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<TbPurchaseReturn> TbPurchaseReturns
		{
			get
			{
				return this.GetTable<TbPurchaseReturn>();
			}
		}
		
		public System.Data.Linq.Table<TbRole> TbRoles
		{
			get
			{
				return this.GetTable<TbRole>();
			}
		}
		
		public System.Data.Linq.Table<TbSaleInvoice> TbSaleInvoices
		{
			get
			{
				return this.GetTable<TbSaleInvoice>();
			}
		}
		
		public System.Data.Linq.Table<TbSaleOrder> TbSaleOrders
		{
			get
			{
				return this.GetTable<TbSaleOrder>();
			}
		}
		
		public System.Data.Linq.Table<TbSalesReturn> TbSalesReturns
		{
			get
			{
				return this.GetTable<TbSalesReturn>();
			}
		}
		
		public System.Data.Linq.Table<TbSupplier> TbSuppliers
		{
			get
			{
				return this.GetTable<TbSupplier>();
			}
		}
		
		public System.Data.Linq.Table<TbUser> TbUsers
		{
			get
			{
				return this.GetTable<TbUser>();
			}
		}
		
		public System.Data.Linq.Table<TbUserAccess> TbUserAccesses
		{
			get
			{
				return this.GetTable<TbUserAccess>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessMenu")]
	public partial class AccessMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AccessMenu_Id;
		
		private string _MenuName;
		
		private System.Nullable<long> _UserAccessId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccessMenu_IdChanging(long value);
    partial void OnAccessMenu_IdChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnUserAccessIdChanging(System.Nullable<long> value);
    partial void OnUserAccessIdChanged();
    #endregion
		
		public AccessMenu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessMenu_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long AccessMenu_Id
		{
			get
			{
				return this._AccessMenu_Id;
			}
			set
			{
				if ((this._AccessMenu_Id != value))
				{
					this.OnAccessMenu_IdChanging(value);
					this.SendPropertyChanging();
					this._AccessMenu_Id = value;
					this.SendPropertyChanged("AccessMenu_Id");
					this.OnAccessMenu_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccessId", DbType="BigInt")]
		public System.Nullable<long> UserAccessId
		{
			get
			{
				return this._UserAccessId;
			}
			set
			{
				if ((this._UserAccessId != value))
				{
					this.OnUserAccessIdChanging(value);
					this.SendPropertyChanging();
					this._UserAccessId = value;
					this.SendPropertyChanged("UserAccessId");
					this.OnUserAccessIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbCustomer")]
	public partial class TbCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CustomerId;
		
		private string _CustomerName;
		
		private string _CustomerFatherName;
		
		private System.Nullable<decimal> _CustomerPhNo;
		
		private string _CustomerAddress;
		
		private string _CustomerEmail;
		
		private string _CustomerPassword;
		
		private EntitySet<TbSaleInvoice> _TbSaleInvoices;
		
		private EntitySet<TbSalesReturn> _TbSalesReturns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(long value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerFatherNameChanging(string value);
    partial void OnCustomerFatherNameChanged();
    partial void OnCustomerPhNoChanging(System.Nullable<decimal> value);
    partial void OnCustomerPhNoChanged();
    partial void OnCustomerAddressChanging(string value);
    partial void OnCustomerAddressChanged();
    partial void OnCustomerEmailChanging(string value);
    partial void OnCustomerEmailChanged();
    partial void OnCustomerPasswordChanging(string value);
    partial void OnCustomerPasswordChanged();
    #endregion
		
		public TbCustomer()
		{
			this._TbSaleInvoices = new EntitySet<TbSaleInvoice>(new Action<TbSaleInvoice>(this.attach_TbSaleInvoices), new Action<TbSaleInvoice>(this.detach_TbSaleInvoices));
			this._TbSalesReturns = new EntitySet<TbSalesReturn>(new Action<TbSalesReturn>(this.attach_TbSalesReturns), new Action<TbSalesReturn>(this.detach_TbSalesReturns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerFatherName", DbType="NVarChar(50)")]
		public string CustomerFatherName
		{
			get
			{
				return this._CustomerFatherName;
			}
			set
			{
				if ((this._CustomerFatherName != value))
				{
					this.OnCustomerFatherNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerFatherName = value;
					this.SendPropertyChanged("CustomerFatherName");
					this.OnCustomerFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhNo", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CustomerPhNo
		{
			get
			{
				return this._CustomerPhNo;
			}
			set
			{
				if ((this._CustomerPhNo != value))
				{
					this.OnCustomerPhNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhNo = value;
					this.SendPropertyChanged("CustomerPhNo");
					this.OnCustomerPhNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAddress", DbType="NVarChar(50)")]
		public string CustomerAddress
		{
			get
			{
				return this._CustomerAddress;
			}
			set
			{
				if ((this._CustomerAddress != value))
				{
					this.OnCustomerAddressChanging(value);
					this.SendPropertyChanging();
					this._CustomerAddress = value;
					this.SendPropertyChanged("CustomerAddress");
					this.OnCustomerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmail", DbType="NVarChar(50)")]
		public string CustomerEmail
		{
			get
			{
				return this._CustomerEmail;
			}
			set
			{
				if ((this._CustomerEmail != value))
				{
					this.OnCustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._CustomerEmail = value;
					this.SendPropertyChanged("CustomerEmail");
					this.OnCustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPassword", DbType="NVarChar(50)")]
		public string CustomerPassword
		{
			get
			{
				return this._CustomerPassword;
			}
			set
			{
				if ((this._CustomerPassword != value))
				{
					this.OnCustomerPasswordChanging(value);
					this.SendPropertyChanging();
					this._CustomerPassword = value;
					this.SendPropertyChanged("CustomerPassword");
					this.OnCustomerPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbCustomer_TbSaleInvoice", Storage="_TbSaleInvoices", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<TbSaleInvoice> TbSaleInvoices
		{
			get
			{
				return this._TbSaleInvoices;
			}
			set
			{
				this._TbSaleInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbCustomer_TbSalesReturn", Storage="_TbSalesReturns", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<TbSalesReturn> TbSalesReturns
		{
			get
			{
				return this._TbSalesReturns;
			}
			set
			{
				this._TbSalesReturns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbSaleInvoices(TbSaleInvoice entity)
		{
			this.SendPropertyChanging();
			entity.TbCustomer = this;
		}
		
		private void detach_TbSaleInvoices(TbSaleInvoice entity)
		{
			this.SendPropertyChanging();
			entity.TbCustomer = null;
		}
		
		private void attach_TbSalesReturns(TbSalesReturn entity)
		{
			this.SendPropertyChanging();
			entity.TbCustomer = this;
		}
		
		private void detach_TbSalesReturns(TbSalesReturn entity)
		{
			this.SendPropertyChanging();
			entity.TbCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbItem")]
	public partial class TbItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ItemId;
		
		private string _ItemName;
		
		private string _ItemBarcode;
		
		private System.Nullable<decimal> _ItemUnitPrice;
		
		private System.Nullable<decimal> _ItemQuantity;
		
		private System.Nullable<decimal> _ItemSalePrice;
		
		private EntitySet<TbPurchaseOrder> _TbPurchaseOrders;
		
		private EntitySet<TbPurchaseReturn> _TbPurchaseReturns;
		
		private EntitySet<TbSaleOrder> _TbSaleOrders;
		
		private EntitySet<TbSalesReturn> _TbSalesReturns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemBarcodeChanging(string value);
    partial void OnItemBarcodeChanged();
    partial void OnItemUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnItemUnitPriceChanged();
    partial void OnItemQuantityChanging(System.Nullable<decimal> value);
    partial void OnItemQuantityChanged();
    partial void OnItemSalePriceChanging(System.Nullable<decimal> value);
    partial void OnItemSalePriceChanged();
    #endregion
		
		public TbItem()
		{
			this._TbPurchaseOrders = new EntitySet<TbPurchaseOrder>(new Action<TbPurchaseOrder>(this.attach_TbPurchaseOrders), new Action<TbPurchaseOrder>(this.detach_TbPurchaseOrders));
			this._TbPurchaseReturns = new EntitySet<TbPurchaseReturn>(new Action<TbPurchaseReturn>(this.attach_TbPurchaseReturns), new Action<TbPurchaseReturn>(this.detach_TbPurchaseReturns));
			this._TbSaleOrders = new EntitySet<TbSaleOrder>(new Action<TbSaleOrder>(this.attach_TbSaleOrders), new Action<TbSaleOrder>(this.detach_TbSaleOrders));
			this._TbSalesReturns = new EntitySet<TbSalesReturn>(new Action<TbSalesReturn>(this.attach_TbSalesReturns), new Action<TbSalesReturn>(this.detach_TbSalesReturns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(50)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemBarcode", DbType="NVarChar(50)")]
		public string ItemBarcode
		{
			get
			{
				return this._ItemBarcode;
			}
			set
			{
				if ((this._ItemBarcode != value))
				{
					this.OnItemBarcodeChanging(value);
					this.SendPropertyChanging();
					this._ItemBarcode = value;
					this.SendPropertyChanged("ItemBarcode");
					this.OnItemBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemUnitPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ItemUnitPrice
		{
			get
			{
				return this._ItemUnitPrice;
			}
			set
			{
				if ((this._ItemUnitPrice != value))
				{
					this.OnItemUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemUnitPrice = value;
					this.SendPropertyChanged("ItemUnitPrice");
					this.OnItemUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemQuantity", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ItemQuantity
		{
			get
			{
				return this._ItemQuantity;
			}
			set
			{
				if ((this._ItemQuantity != value))
				{
					this.OnItemQuantityChanging(value);
					this.SendPropertyChanging();
					this._ItemQuantity = value;
					this.SendPropertyChanged("ItemQuantity");
					this.OnItemQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSalePrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ItemSalePrice
		{
			get
			{
				return this._ItemSalePrice;
			}
			set
			{
				if ((this._ItemSalePrice != value))
				{
					this.OnItemSalePriceChanging(value);
					this.SendPropertyChanging();
					this._ItemSalePrice = value;
					this.SendPropertyChanged("ItemSalePrice");
					this.OnItemSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbItem_TbPurchaseOrder", Storage="_TbPurchaseOrders", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<TbPurchaseOrder> TbPurchaseOrders
		{
			get
			{
				return this._TbPurchaseOrders;
			}
			set
			{
				this._TbPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbItem_TbPurchaseReturn", Storage="_TbPurchaseReturns", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<TbPurchaseReturn> TbPurchaseReturns
		{
			get
			{
				return this._TbPurchaseReturns;
			}
			set
			{
				this._TbPurchaseReturns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbItem_TbSaleOrder", Storage="_TbSaleOrders", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<TbSaleOrder> TbSaleOrders
		{
			get
			{
				return this._TbSaleOrders;
			}
			set
			{
				this._TbSaleOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbItem_TbSalesReturn", Storage="_TbSalesReturns", ThisKey="ItemId", OtherKey="ItemId")]
		public EntitySet<TbSalesReturn> TbSalesReturns
		{
			get
			{
				return this._TbSalesReturns;
			}
			set
			{
				this._TbSalesReturns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbPurchaseOrders(TbPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.TbItem = this;
		}
		
		private void detach_TbPurchaseOrders(TbPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.TbItem = null;
		}
		
		private void attach_TbPurchaseReturns(TbPurchaseReturn entity)
		{
			this.SendPropertyChanging();
			entity.TbItem = this;
		}
		
		private void detach_TbPurchaseReturns(TbPurchaseReturn entity)
		{
			this.SendPropertyChanging();
			entity.TbItem = null;
		}
		
		private void attach_TbSaleOrders(TbSaleOrder entity)
		{
			this.SendPropertyChanging();
			entity.TbItem = this;
		}
		
		private void detach_TbSaleOrders(TbSaleOrder entity)
		{
			this.SendPropertyChanging();
			entity.TbItem = null;
		}
		
		private void attach_TbSalesReturns(TbSalesReturn entity)
		{
			this.SendPropertyChanging();
			entity.TbItem = this;
		}
		
		private void detach_TbSalesReturns(TbSalesReturn entity)
		{
			this.SendPropertyChanging();
			entity.TbItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbPurchaseInvoice")]
	public partial class TbPurchaseInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PurchaseInvoiceId;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<decimal> _InvoiceTotalAmount;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<decimal> _Cash;
		
		private System.Nullable<decimal> _ChangeBackAmount;
		
		private System.Nullable<long> _SupplierId;
		
		private System.Nullable<decimal> _AmountAfterDiscount;
		
		private EntitySet<TbPurchaseOrder> _TbPurchaseOrders;
		
		private EntityRef<TbSupplier> _TbSupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseInvoiceIdChanging(long value);
    partial void OnPurchaseInvoiceIdChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoiceTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnInvoiceTotalAmountChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnCashChanging(System.Nullable<decimal> value);
    partial void OnCashChanged();
    partial void OnChangeBackAmountChanging(System.Nullable<decimal> value);
    partial void OnChangeBackAmountChanged();
    partial void OnSupplierIdChanging(System.Nullable<long> value);
    partial void OnSupplierIdChanged();
    partial void OnAmountAfterDiscountChanging(System.Nullable<decimal> value);
    partial void OnAmountAfterDiscountChanged();
    #endregion
		
		public TbPurchaseInvoice()
		{
			this._TbPurchaseOrders = new EntitySet<TbPurchaseOrder>(new Action<TbPurchaseOrder>(this.attach_TbPurchaseOrders), new Action<TbPurchaseOrder>(this.detach_TbPurchaseOrders));
			this._TbSupplier = default(EntityRef<TbSupplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseInvoiceId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PurchaseInvoiceId
		{
			get
			{
				return this._PurchaseInvoiceId;
			}
			set
			{
				if ((this._PurchaseInvoiceId != value))
				{
					this.OnPurchaseInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseInvoiceId = value;
					this.SendPropertyChanged("PurchaseInvoiceId");
					this.OnPurchaseInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTotalAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InvoiceTotalAmount
		{
			get
			{
				return this._InvoiceTotalAmount;
			}
			set
			{
				if ((this._InvoiceTotalAmount != value))
				{
					this.OnInvoiceTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTotalAmount = value;
					this.SendPropertyChanged("InvoiceTotalAmount");
					this.OnInvoiceTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Cash
		{
			get
			{
				return this._Cash;
			}
			set
			{
				if ((this._Cash != value))
				{
					this.OnCashChanging(value);
					this.SendPropertyChanging();
					this._Cash = value;
					this.SendPropertyChanged("Cash");
					this.OnCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeBackAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ChangeBackAmount
		{
			get
			{
				return this._ChangeBackAmount;
			}
			set
			{
				if ((this._ChangeBackAmount != value))
				{
					this.OnChangeBackAmountChanging(value);
					this.SendPropertyChanging();
					this._ChangeBackAmount = value;
					this.SendPropertyChanged("ChangeBackAmount");
					this.OnChangeBackAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="BigInt")]
		public System.Nullable<long> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._TbSupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountAfterDiscount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AmountAfterDiscount
		{
			get
			{
				return this._AmountAfterDiscount;
			}
			set
			{
				if ((this._AmountAfterDiscount != value))
				{
					this.OnAmountAfterDiscountChanging(value);
					this.SendPropertyChanging();
					this._AmountAfterDiscount = value;
					this.SendPropertyChanged("AmountAfterDiscount");
					this.OnAmountAfterDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbPurchaseInvoice_TbPurchaseOrder", Storage="_TbPurchaseOrders", ThisKey="PurchaseInvoiceId", OtherKey="PurchaseInvoiceId")]
		public EntitySet<TbPurchaseOrder> TbPurchaseOrders
		{
			get
			{
				return this._TbPurchaseOrders;
			}
			set
			{
				this._TbPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbSupplier_TbPurchaseInvoice", Storage="_TbSupplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public TbSupplier TbSupplier
		{
			get
			{
				return this._TbSupplier.Entity;
			}
			set
			{
				TbSupplier previousValue = this._TbSupplier.Entity;
				if (((previousValue != value) 
							|| (this._TbSupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbSupplier.Entity = null;
						previousValue.TbPurchaseInvoices.Remove(this);
					}
					this._TbSupplier.Entity = value;
					if ((value != null))
					{
						value.TbPurchaseInvoices.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbSupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbPurchaseOrders(TbPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.TbPurchaseInvoice = this;
		}
		
		private void detach_TbPurchaseOrders(TbPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.TbPurchaseInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbPurchaseOrder")]
	public partial class TbPurchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PurchaseOrderId;
		
		private System.Nullable<decimal> _purchaseQuantity;
		
		private System.Nullable<long> _ItemId;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<long> _PurchaseInvoiceId;
		
		private EntityRef<TbItem> _TbItem;
		
		private EntityRef<TbPurchaseInvoice> _TbPurchaseInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseOrderIdChanging(long value);
    partial void OnPurchaseOrderIdChanged();
    partial void OnpurchaseQuantityChanging(System.Nullable<decimal> value);
    partial void OnpurchaseQuantityChanged();
    partial void OnItemIdChanging(System.Nullable<long> value);
    partial void OnItemIdChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnPurchaseInvoiceIdChanging(System.Nullable<long> value);
    partial void OnPurchaseInvoiceIdChanged();
    #endregion
		
		public TbPurchaseOrder()
		{
			this._TbItem = default(EntityRef<TbItem>);
			this._TbPurchaseInvoice = default(EntityRef<TbPurchaseInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PurchaseOrderId
		{
			get
			{
				return this._PurchaseOrderId;
			}
			set
			{
				if ((this._PurchaseOrderId != value))
				{
					this.OnPurchaseOrderIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderId = value;
					this.SendPropertyChanged("PurchaseOrderId");
					this.OnPurchaseOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaseQuantity", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> purchaseQuantity
		{
			get
			{
				return this._purchaseQuantity;
			}
			set
			{
				if ((this._purchaseQuantity != value))
				{
					this.OnpurchaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._purchaseQuantity = value;
					this.SendPropertyChanged("purchaseQuantity");
					this.OnpurchaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt")]
		public System.Nullable<long> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._TbItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseInvoiceId", DbType="BigInt")]
		public System.Nullable<long> PurchaseInvoiceId
		{
			get
			{
				return this._PurchaseInvoiceId;
			}
			set
			{
				if ((this._PurchaseInvoiceId != value))
				{
					if (this._TbPurchaseInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseInvoiceId = value;
					this.SendPropertyChanged("PurchaseInvoiceId");
					this.OnPurchaseInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbItem_TbPurchaseOrder", Storage="_TbItem", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public TbItem TbItem
		{
			get
			{
				return this._TbItem.Entity;
			}
			set
			{
				TbItem previousValue = this._TbItem.Entity;
				if (((previousValue != value) 
							|| (this._TbItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbItem.Entity = null;
						previousValue.TbPurchaseOrders.Remove(this);
					}
					this._TbItem.Entity = value;
					if ((value != null))
					{
						value.TbPurchaseOrders.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbPurchaseInvoice_TbPurchaseOrder", Storage="_TbPurchaseInvoice", ThisKey="PurchaseInvoiceId", OtherKey="PurchaseInvoiceId", IsForeignKey=true)]
		public TbPurchaseInvoice TbPurchaseInvoice
		{
			get
			{
				return this._TbPurchaseInvoice.Entity;
			}
			set
			{
				TbPurchaseInvoice previousValue = this._TbPurchaseInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TbPurchaseInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbPurchaseInvoice.Entity = null;
						previousValue.TbPurchaseOrders.Remove(this);
					}
					this._TbPurchaseInvoice.Entity = value;
					if ((value != null))
					{
						value.TbPurchaseOrders.Add(this);
						this._PurchaseInvoiceId = value.PurchaseInvoiceId;
					}
					else
					{
						this._PurchaseInvoiceId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbPurchaseInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbPurchaseReturn")]
	public partial class TbPurchaseReturn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PurchaseReturnId;
		
		private System.Nullable<int> _ReturnQuantity;
		
		private System.Nullable<decimal> _ReturnPrice;
		
		private System.Nullable<long> _SupplierId;
		
		private System.Nullable<System.DateTime> _ReturnDate;
		
		private System.Nullable<long> _ItemId;
		
		private EntityRef<TbItem> _TbItem;
		
		private EntityRef<TbSupplier> _TbSupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseReturnIdChanging(long value);
    partial void OnPurchaseReturnIdChanged();
    partial void OnReturnQuantityChanging(System.Nullable<int> value);
    partial void OnReturnQuantityChanged();
    partial void OnReturnPriceChanging(System.Nullable<decimal> value);
    partial void OnReturnPriceChanged();
    partial void OnSupplierIdChanging(System.Nullable<long> value);
    partial void OnSupplierIdChanged();
    partial void OnReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnDateChanged();
    partial void OnItemIdChanging(System.Nullable<long> value);
    partial void OnItemIdChanged();
    #endregion
		
		public TbPurchaseReturn()
		{
			this._TbItem = default(EntityRef<TbItem>);
			this._TbSupplier = default(EntityRef<TbSupplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseReturnId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long PurchaseReturnId
		{
			get
			{
				return this._PurchaseReturnId;
			}
			set
			{
				if ((this._PurchaseReturnId != value))
				{
					this.OnPurchaseReturnIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseReturnId = value;
					this.SendPropertyChanged("PurchaseReturnId");
					this.OnPurchaseReturnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnQuantity", DbType="Int")]
		public System.Nullable<int> ReturnQuantity
		{
			get
			{
				return this._ReturnQuantity;
			}
			set
			{
				if ((this._ReturnQuantity != value))
				{
					this.OnReturnQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReturnQuantity = value;
					this.SendPropertyChanged("ReturnQuantity");
					this.OnReturnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ReturnPrice
		{
			get
			{
				return this._ReturnPrice;
			}
			set
			{
				if ((this._ReturnPrice != value))
				{
					this.OnReturnPriceChanging(value);
					this.SendPropertyChanging();
					this._ReturnPrice = value;
					this.SendPropertyChanged("ReturnPrice");
					this.OnReturnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="BigInt")]
		public System.Nullable<long> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._TbSupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReturnDate
		{
			get
			{
				return this._ReturnDate;
			}
			set
			{
				if ((this._ReturnDate != value))
				{
					this.OnReturnDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnDate = value;
					this.SendPropertyChanged("ReturnDate");
					this.OnReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt")]
		public System.Nullable<long> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._TbItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbItem_TbPurchaseReturn", Storage="_TbItem", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public TbItem TbItem
		{
			get
			{
				return this._TbItem.Entity;
			}
			set
			{
				TbItem previousValue = this._TbItem.Entity;
				if (((previousValue != value) 
							|| (this._TbItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbItem.Entity = null;
						previousValue.TbPurchaseReturns.Remove(this);
					}
					this._TbItem.Entity = value;
					if ((value != null))
					{
						value.TbPurchaseReturns.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbSupplier_TbPurchaseReturn", Storage="_TbSupplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public TbSupplier TbSupplier
		{
			get
			{
				return this._TbSupplier.Entity;
			}
			set
			{
				TbSupplier previousValue = this._TbSupplier.Entity;
				if (((previousValue != value) 
							|| (this._TbSupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbSupplier.Entity = null;
						previousValue.TbPurchaseReturns.Remove(this);
					}
					this._TbSupplier.Entity = value;
					if ((value != null))
					{
						value.TbPurchaseReturns.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbSupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbRole")]
	public partial class TbRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RoleId;
		
		private string _RoleName;
		
		private EntitySet<TbUser> _TbUsers;
		
		private EntitySet<TbUserAccess> _TbUserAccesses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public TbRole()
		{
			this._TbUsers = new EntitySet<TbUser>(new Action<TbUser>(this.attach_TbUsers), new Action<TbUser>(this.detach_TbUsers));
			this._TbUserAccesses = new EntitySet<TbUserAccess>(new Action<TbUserAccess>(this.attach_TbUserAccesses), new Action<TbUserAccess>(this.detach_TbUserAccesses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbRole_TbUser", Storage="_TbUsers", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<TbUser> TbUsers
		{
			get
			{
				return this._TbUsers;
			}
			set
			{
				this._TbUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbRole_TbUserAccess", Storage="_TbUserAccesses", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<TbUserAccess> TbUserAccesses
		{
			get
			{
				return this._TbUserAccesses;
			}
			set
			{
				this._TbUserAccesses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbUsers(TbUser entity)
		{
			this.SendPropertyChanging();
			entity.TbRole = this;
		}
		
		private void detach_TbUsers(TbUser entity)
		{
			this.SendPropertyChanging();
			entity.TbRole = null;
		}
		
		private void attach_TbUserAccesses(TbUserAccess entity)
		{
			this.SendPropertyChanging();
			entity.TbRole = this;
		}
		
		private void detach_TbUserAccesses(TbUserAccess entity)
		{
			this.SendPropertyChanging();
			entity.TbRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbSaleInvoice")]
	public partial class TbSaleInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _InvoiceId;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<decimal> _InvoiceTotalAmount;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<decimal> _Cash;
		
		private System.Nullable<decimal> _ChangeBackAmount;
		
		private System.Nullable<long> _CustomerId;
		
		private System.Nullable<decimal> _AmountAfterDiscount;
		
		private EntitySet<TbSaleOrder> _TbSaleOrders;
		
		private EntityRef<TbCustomer> _TbCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(long value);
    partial void OnInvoiceIdChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoiceTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnInvoiceTotalAmountChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnCashChanging(System.Nullable<decimal> value);
    partial void OnCashChanged();
    partial void OnChangeBackAmountChanging(System.Nullable<decimal> value);
    partial void OnChangeBackAmountChanged();
    partial void OnCustomerIdChanging(System.Nullable<long> value);
    partial void OnCustomerIdChanged();
    partial void OnAmountAfterDiscountChanging(System.Nullable<decimal> value);
    partial void OnAmountAfterDiscountChanged();
    #endregion
		
		public TbSaleInvoice()
		{
			this._TbSaleOrders = new EntitySet<TbSaleOrder>(new Action<TbSaleOrder>(this.attach_TbSaleOrders), new Action<TbSaleOrder>(this.detach_TbSaleOrders));
			this._TbCustomer = default(EntityRef<TbCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTotalAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InvoiceTotalAmount
		{
			get
			{
				return this._InvoiceTotalAmount;
			}
			set
			{
				if ((this._InvoiceTotalAmount != value))
				{
					this.OnInvoiceTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTotalAmount = value;
					this.SendPropertyChanged("InvoiceTotalAmount");
					this.OnInvoiceTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Cash
		{
			get
			{
				return this._Cash;
			}
			set
			{
				if ((this._Cash != value))
				{
					this.OnCashChanging(value);
					this.SendPropertyChanging();
					this._Cash = value;
					this.SendPropertyChanged("Cash");
					this.OnCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeBackAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ChangeBackAmount
		{
			get
			{
				return this._ChangeBackAmount;
			}
			set
			{
				if ((this._ChangeBackAmount != value))
				{
					this.OnChangeBackAmountChanging(value);
					this.SendPropertyChanging();
					this._ChangeBackAmount = value;
					this.SendPropertyChanged("ChangeBackAmount");
					this.OnChangeBackAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="BigInt")]
		public System.Nullable<long> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._TbCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountAfterDiscount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AmountAfterDiscount
		{
			get
			{
				return this._AmountAfterDiscount;
			}
			set
			{
				if ((this._AmountAfterDiscount != value))
				{
					this.OnAmountAfterDiscountChanging(value);
					this.SendPropertyChanging();
					this._AmountAfterDiscount = value;
					this.SendPropertyChanged("AmountAfterDiscount");
					this.OnAmountAfterDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbSaleInvoice_TbSaleOrder", Storage="_TbSaleOrders", ThisKey="InvoiceId", OtherKey="InvoiceId")]
		public EntitySet<TbSaleOrder> TbSaleOrders
		{
			get
			{
				return this._TbSaleOrders;
			}
			set
			{
				this._TbSaleOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbCustomer_TbSaleInvoice", Storage="_TbCustomer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public TbCustomer TbCustomer
		{
			get
			{
				return this._TbCustomer.Entity;
			}
			set
			{
				TbCustomer previousValue = this._TbCustomer.Entity;
				if (((previousValue != value) 
							|| (this._TbCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbCustomer.Entity = null;
						previousValue.TbSaleInvoices.Remove(this);
					}
					this._TbCustomer.Entity = value;
					if ((value != null))
					{
						value.TbSaleInvoices.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbSaleOrders(TbSaleOrder entity)
		{
			this.SendPropertyChanging();
			entity.TbSaleInvoice = this;
		}
		
		private void detach_TbSaleOrders(TbSaleOrder entity)
		{
			this.SendPropertyChanging();
			entity.TbSaleInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbSaleOrder")]
	public partial class TbSaleOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OrderId;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<long> _ItemId;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<long> _InvoiceId;
		
		private EntityRef<TbItem> _TbItem;
		
		private EntityRef<TbSaleInvoice> _TbSaleInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(long value);
    partial void OnOrderIdChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnItemIdChanging(System.Nullable<long> value);
    partial void OnItemIdChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnInvoiceIdChanging(System.Nullable<long> value);
    partial void OnInvoiceIdChanged();
    #endregion
		
		public TbSaleOrder()
		{
			this._TbItem = default(EntityRef<TbItem>);
			this._TbSaleInvoice = default(EntityRef<TbSaleInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt")]
		public System.Nullable<long> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._TbItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="BigInt")]
		public System.Nullable<long> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					if (this._TbSaleInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbItem_TbSaleOrder", Storage="_TbItem", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public TbItem TbItem
		{
			get
			{
				return this._TbItem.Entity;
			}
			set
			{
				TbItem previousValue = this._TbItem.Entity;
				if (((previousValue != value) 
							|| (this._TbItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbItem.Entity = null;
						previousValue.TbSaleOrders.Remove(this);
					}
					this._TbItem.Entity = value;
					if ((value != null))
					{
						value.TbSaleOrders.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbSaleInvoice_TbSaleOrder", Storage="_TbSaleInvoice", ThisKey="InvoiceId", OtherKey="InvoiceId", IsForeignKey=true)]
		public TbSaleInvoice TbSaleInvoice
		{
			get
			{
				return this._TbSaleInvoice.Entity;
			}
			set
			{
				TbSaleInvoice previousValue = this._TbSaleInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TbSaleInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbSaleInvoice.Entity = null;
						previousValue.TbSaleOrders.Remove(this);
					}
					this._TbSaleInvoice.Entity = value;
					if ((value != null))
					{
						value.TbSaleOrders.Add(this);
						this._InvoiceId = value.InvoiceId;
					}
					else
					{
						this._InvoiceId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbSaleInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbSalesReturn")]
	public partial class TbSalesReturn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SalesReturnId;
		
		private System.Nullable<int> _ReturnQuantity;
		
		private System.Nullable<decimal> _ReturnPrice;
		
		private System.Nullable<long> _CustomerId;
		
		private System.Nullable<System.DateTime> _ReturnDate;
		
		private System.Nullable<long> _ItemId;
		
		private EntityRef<TbCustomer> _TbCustomer;
		
		private EntityRef<TbItem> _TbItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesReturnIdChanging(long value);
    partial void OnSalesReturnIdChanged();
    partial void OnReturnQuantityChanging(System.Nullable<int> value);
    partial void OnReturnQuantityChanged();
    partial void OnReturnPriceChanging(System.Nullable<decimal> value);
    partial void OnReturnPriceChanged();
    partial void OnCustomerIdChanging(System.Nullable<long> value);
    partial void OnCustomerIdChanged();
    partial void OnReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnDateChanged();
    partial void OnItemIdChanging(System.Nullable<long> value);
    partial void OnItemIdChanged();
    #endregion
		
		public TbSalesReturn()
		{
			this._TbCustomer = default(EntityRef<TbCustomer>);
			this._TbItem = default(EntityRef<TbItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesReturnId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SalesReturnId
		{
			get
			{
				return this._SalesReturnId;
			}
			set
			{
				if ((this._SalesReturnId != value))
				{
					this.OnSalesReturnIdChanging(value);
					this.SendPropertyChanging();
					this._SalesReturnId = value;
					this.SendPropertyChanged("SalesReturnId");
					this.OnSalesReturnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnQuantity", DbType="Int")]
		public System.Nullable<int> ReturnQuantity
		{
			get
			{
				return this._ReturnQuantity;
			}
			set
			{
				if ((this._ReturnQuantity != value))
				{
					this.OnReturnQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReturnQuantity = value;
					this.SendPropertyChanged("ReturnQuantity");
					this.OnReturnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ReturnPrice
		{
			get
			{
				return this._ReturnPrice;
			}
			set
			{
				if ((this._ReturnPrice != value))
				{
					this.OnReturnPriceChanging(value);
					this.SendPropertyChanging();
					this._ReturnPrice = value;
					this.SendPropertyChanged("ReturnPrice");
					this.OnReturnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="BigInt")]
		public System.Nullable<long> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._TbCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReturnDate
		{
			get
			{
				return this._ReturnDate;
			}
			set
			{
				if ((this._ReturnDate != value))
				{
					this.OnReturnDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnDate = value;
					this.SendPropertyChanged("ReturnDate");
					this.OnReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt")]
		public System.Nullable<long> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._TbItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbCustomer_TbSalesReturn", Storage="_TbCustomer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public TbCustomer TbCustomer
		{
			get
			{
				return this._TbCustomer.Entity;
			}
			set
			{
				TbCustomer previousValue = this._TbCustomer.Entity;
				if (((previousValue != value) 
							|| (this._TbCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbCustomer.Entity = null;
						previousValue.TbSalesReturns.Remove(this);
					}
					this._TbCustomer.Entity = value;
					if ((value != null))
					{
						value.TbSalesReturns.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbItem_TbSalesReturn", Storage="_TbItem", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true)]
		public TbItem TbItem
		{
			get
			{
				return this._TbItem.Entity;
			}
			set
			{
				TbItem previousValue = this._TbItem.Entity;
				if (((previousValue != value) 
							|| (this._TbItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbItem.Entity = null;
						previousValue.TbSalesReturns.Remove(this);
					}
					this._TbItem.Entity = value;
					if ((value != null))
					{
						value.TbSalesReturns.Add(this);
						this._ItemId = value.ItemId;
					}
					else
					{
						this._ItemId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbSupplier")]
	public partial class TbSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SupplierId;
		
		private string _SupplierRegistrationNumber;
		
		private string _SupplierName;
		
		private System.Nullable<decimal> _SupplierContact;
		
		private string _SupplierEmail;
		
		private System.Nullable<decimal> _SupplierCNIC;
		
		private EntitySet<TbPurchaseInvoice> _TbPurchaseInvoices;
		
		private EntitySet<TbPurchaseReturn> _TbPurchaseReturns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIdChanging(long value);
    partial void OnSupplierIdChanged();
    partial void OnSupplierRegistrationNumberChanging(string value);
    partial void OnSupplierRegistrationNumberChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnSupplierContactChanging(System.Nullable<decimal> value);
    partial void OnSupplierContactChanged();
    partial void OnSupplierEmailChanging(string value);
    partial void OnSupplierEmailChanged();
    partial void OnSupplierCNICChanging(System.Nullable<decimal> value);
    partial void OnSupplierCNICChanged();
    #endregion
		
		public TbSupplier()
		{
			this._TbPurchaseInvoices = new EntitySet<TbPurchaseInvoice>(new Action<TbPurchaseInvoice>(this.attach_TbPurchaseInvoices), new Action<TbPurchaseInvoice>(this.detach_TbPurchaseInvoices));
			this._TbPurchaseReturns = new EntitySet<TbPurchaseReturn>(new Action<TbPurchaseReturn>(this.attach_TbPurchaseReturns), new Action<TbPurchaseReturn>(this.detach_TbPurchaseReturns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierRegistrationNumber", DbType="NVarChar(50)")]
		public string SupplierRegistrationNumber
		{
			get
			{
				return this._SupplierRegistrationNumber;
			}
			set
			{
				if ((this._SupplierRegistrationNumber != value))
				{
					this.OnSupplierRegistrationNumberChanging(value);
					this.SendPropertyChanging();
					this._SupplierRegistrationNumber = value;
					this.SendPropertyChanged("SupplierRegistrationNumber");
					this.OnSupplierRegistrationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierContact", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SupplierContact
		{
			get
			{
				return this._SupplierContact;
			}
			set
			{
				if ((this._SupplierContact != value))
				{
					this.OnSupplierContactChanging(value);
					this.SendPropertyChanging();
					this._SupplierContact = value;
					this.SendPropertyChanged("SupplierContact");
					this.OnSupplierContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierEmail", DbType="NVarChar(50)")]
		public string SupplierEmail
		{
			get
			{
				return this._SupplierEmail;
			}
			set
			{
				if ((this._SupplierEmail != value))
				{
					this.OnSupplierEmailChanging(value);
					this.SendPropertyChanging();
					this._SupplierEmail = value;
					this.SendPropertyChanged("SupplierEmail");
					this.OnSupplierEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCNIC", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SupplierCNIC
		{
			get
			{
				return this._SupplierCNIC;
			}
			set
			{
				if ((this._SupplierCNIC != value))
				{
					this.OnSupplierCNICChanging(value);
					this.SendPropertyChanging();
					this._SupplierCNIC = value;
					this.SendPropertyChanged("SupplierCNIC");
					this.OnSupplierCNICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbSupplier_TbPurchaseInvoice", Storage="_TbPurchaseInvoices", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<TbPurchaseInvoice> TbPurchaseInvoices
		{
			get
			{
				return this._TbPurchaseInvoices;
			}
			set
			{
				this._TbPurchaseInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbSupplier_TbPurchaseReturn", Storage="_TbPurchaseReturns", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<TbPurchaseReturn> TbPurchaseReturns
		{
			get
			{
				return this._TbPurchaseReturns;
			}
			set
			{
				this._TbPurchaseReturns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TbPurchaseInvoices(TbPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.TbSupplier = this;
		}
		
		private void detach_TbPurchaseInvoices(TbPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.TbSupplier = null;
		}
		
		private void attach_TbPurchaseReturns(TbPurchaseReturn entity)
		{
			this.SendPropertyChanging();
			entity.TbSupplier = this;
		}
		
		private void detach_TbPurchaseReturns(TbPurchaseReturn entity)
		{
			this.SendPropertyChanging();
			entity.TbSupplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbUser")]
	public partial class TbUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserId;
		
		private string _UserFullName;
		
		private string _UserFatherName;
		
		private string _UserCNIC;
		
		private string _UserContact;
		
		private System.Nullable<System.DateTime> _UserDOB;
		
		private System.Nullable<System.DateTime> _UserDOAppointment;
		
		private string _UserAddress;
		
		private string _UserPassword;
		
		private string _UserName;
		
		private System.Nullable<long> _RoleId;
		
		private string _UserImage;
		
		private EntityRef<TbRole> _TbRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnUserFullNameChanging(string value);
    partial void OnUserFullNameChanged();
    partial void OnUserFatherNameChanging(string value);
    partial void OnUserFatherNameChanged();
    partial void OnUserCNICChanging(string value);
    partial void OnUserCNICChanged();
    partial void OnUserContactChanging(string value);
    partial void OnUserContactChanged();
    partial void OnUserDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnUserDOBChanged();
    partial void OnUserDOAppointmentChanging(System.Nullable<System.DateTime> value);
    partial void OnUserDOAppointmentChanged();
    partial void OnUserAddressChanging(string value);
    partial void OnUserAddressChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnRoleIdChanging(System.Nullable<long> value);
    partial void OnRoleIdChanged();
    partial void OnUserImageChanging(string value);
    partial void OnUserImageChanged();
    #endregion
		
		public TbUser()
		{
			this._TbRole = default(EntityRef<TbRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullName", DbType="NVarChar(100)")]
		public string UserFullName
		{
			get
			{
				return this._UserFullName;
			}
			set
			{
				if ((this._UserFullName != value))
				{
					this.OnUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._UserFullName = value;
					this.SendPropertyChanged("UserFullName");
					this.OnUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFatherName", DbType="NVarChar(50)")]
		public string UserFatherName
		{
			get
			{
				return this._UserFatherName;
			}
			set
			{
				if ((this._UserFatherName != value))
				{
					this.OnUserFatherNameChanging(value);
					this.SendPropertyChanging();
					this._UserFatherName = value;
					this.SendPropertyChanged("UserFatherName");
					this.OnUserFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCNIC", DbType="NVarChar(50)")]
		public string UserCNIC
		{
			get
			{
				return this._UserCNIC;
			}
			set
			{
				if ((this._UserCNIC != value))
				{
					this.OnUserCNICChanging(value);
					this.SendPropertyChanging();
					this._UserCNIC = value;
					this.SendPropertyChanged("UserCNIC");
					this.OnUserCNICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserContact", DbType="NVarChar(50)")]
		public string UserContact
		{
			get
			{
				return this._UserContact;
			}
			set
			{
				if ((this._UserContact != value))
				{
					this.OnUserContactChanging(value);
					this.SendPropertyChanging();
					this._UserContact = value;
					this.SendPropertyChanged("UserContact");
					this.OnUserContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDOB", DbType="Date")]
		public System.Nullable<System.DateTime> UserDOB
		{
			get
			{
				return this._UserDOB;
			}
			set
			{
				if ((this._UserDOB != value))
				{
					this.OnUserDOBChanging(value);
					this.SendPropertyChanging();
					this._UserDOB = value;
					this.SendPropertyChanged("UserDOB");
					this.OnUserDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDOAppointment", DbType="Date")]
		public System.Nullable<System.DateTime> UserDOAppointment
		{
			get
			{
				return this._UserDOAppointment;
			}
			set
			{
				if ((this._UserDOAppointment != value))
				{
					this.OnUserDOAppointmentChanging(value);
					this.SendPropertyChanging();
					this._UserDOAppointment = value;
					this.SendPropertyChanged("UserDOAppointment");
					this.OnUserDOAppointmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddress", DbType="NVarChar(50)")]
		public string UserAddress
		{
			get
			{
				return this._UserAddress;
			}
			set
			{
				if ((this._UserAddress != value))
				{
					this.OnUserAddressChanging(value);
					this.SendPropertyChanging();
					this._UserAddress = value;
					this.SendPropertyChanged("UserAddress");
					this.OnUserAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(50)")]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt")]
		public System.Nullable<long> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._TbRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserImage", DbType="NVarChar(100)")]
		public string UserImage
		{
			get
			{
				return this._UserImage;
			}
			set
			{
				if ((this._UserImage != value))
				{
					this.OnUserImageChanging(value);
					this.SendPropertyChanging();
					this._UserImage = value;
					this.SendPropertyChanged("UserImage");
					this.OnUserImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbRole_TbUser", Storage="_TbRole", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public TbRole TbRole
		{
			get
			{
				return this._TbRole.Entity;
			}
			set
			{
				TbRole previousValue = this._TbRole.Entity;
				if (((previousValue != value) 
							|| (this._TbRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbRole.Entity = null;
						previousValue.TbUsers.Remove(this);
					}
					this._TbRole.Entity = value;
					if ((value != null))
					{
						value.TbUsers.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbUserAccess")]
	public partial class TbUserAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserAccessId;
		
		private System.Nullable<long> _RoleId;
		
		private string _PageName;
		
		private string _MenuName;
		
		private EntityRef<TbRole> _TbRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAccessIdChanging(long value);
    partial void OnUserAccessIdChanged();
    partial void OnRoleIdChanging(System.Nullable<long> value);
    partial void OnRoleIdChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    #endregion
		
		public TbUserAccess()
		{
			this._TbRole = default(EntityRef<TbRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccessId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long UserAccessId
		{
			get
			{
				return this._UserAccessId;
			}
			set
			{
				if ((this._UserAccessId != value))
				{
					this.OnUserAccessIdChanging(value);
					this.SendPropertyChanging();
					this._UserAccessId = value;
					this.SendPropertyChanged("UserAccessId");
					this.OnUserAccessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt")]
		public System.Nullable<long> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._TbRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(50)")]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TbRole_TbUserAccess", Storage="_TbRole", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public TbRole TbRole
		{
			get
			{
				return this._TbRole.Entity;
			}
			set
			{
				TbRole previousValue = this._TbRole.Entity;
				if (((previousValue != value) 
							|| (this._TbRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TbRole.Entity = null;
						previousValue.TbUserAccesses.Remove(this);
					}
					this._TbRole.Entity = value;
					if ((value != null))
					{
						value.TbUserAccesses.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TbRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
